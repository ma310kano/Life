@page "/families/{FamilyId}"

@using Life.Application
@using Life.Application.Data

@inject IFamilyQueryService FamilyQueryService

@if (_family is not null)
{
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="/">ホーム</a></li>
			<li class="breadcrumb-item"><a href="/families">家族</a></li>
			<li class="breadcrumb-item active" aria-current="page">@_family.FamilyName</li>
		</ol>
	</nav>

	<h1>@_family.FamilyName</h1>

	<h2>家族</h2>
	<table class="table">
		<tbody>
			<tr>
				<th>家族ID</th>
				<td>@_family.FamilyId</td>
			</tr>
			<tr>
				<th>家族名</th>
				<td>@_family.FamilyName</td>
			</tr>
		</tbody>
	</table>
}

@code {
	#region Fields

	/// <summary>
	/// 家族
	/// </summary>
	private FamilyData? _family;

	#endregion

	#region Properties

	/// <summary>
	/// 家族IDを設定または取得します。
	/// </summary>
	[Parameter]
	public string FamilyId { get; set; } = string.Empty;

	#endregion

	#region Methods

	/// <summary>
	/// 初期化された際に呼び出されます。
	/// </summary>
	/// <returns>非同期操作を返します。</returns>
	protected override async Task OnInitializedAsync()
	{
		_family = await FamilyQueryService.QuerySingleAsync(FamilyId);
	}

	#endregion
}
