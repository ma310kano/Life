@page "/item-recipes/{ItemRecipeId}"

@using Life.Application
@using Life.Application.Data

@inject IItemRecipeQueryService ItemRecipeQueryService

@if (_itemRecipe is not null)
{
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="/">ホーム</a></li>
			<li class="breadcrumb-item"><a href="/item-recipes">レシピ(アイテム)</a></li>
			<li class="breadcrumb-item active" aria-current="page">@(_itemRecipe.Item.ItemName)のレシピ</li>
		</ol>
	</nav>

	<h1>@(_itemRecipe.Item.ItemName)のレシピ</h1>

	<h2>アイテム</h2>
	<table class="table">
		<tbody>
			<tr>
				<th>アイテムID</th>
				<td>@_itemRecipe.Item.ItemId</td>
			</tr>
			<tr>
				<th>アイテム名</th>
				<td><a href="/items/@_itemRecipe.Item.ItemId">@_itemRecipe.Item.ItemName</a></td>
			</tr>
		</tbody>
	</table>

	<h2>材料</h2>
	<table class="table">
		<thead>
			<tr>
				<th>アイテムID</th>
				<th>アイテム名</th>
				<th>数量</th>
			</tr>
		</thead>
		<tbody>
			@foreach (ItemRecipeIngredientData ingredient in _itemRecipe.Ingredients)
			{
				<tr>
					<td class="item-id">@ingredient.Item.ItemId</td>
					<td><a href="/items/@ingredient.Item.ItemId">@ingredient.Item.ItemName</a></td>
					<td>@ingredient.Quantity</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	#region Fields

	/// <summary>
	/// アイテムのレシピ
	/// </summary>
	private ItemRecipeData? _itemRecipe;

	#endregion

	#region Properties

	/// <summary>
	/// アイテムのレシピIDを設定または取得します。
	/// </summary>
	[Parameter]
	public string ItemRecipeId { get; set; } = string.Empty;

	#endregion

	#region Methods

	/// <summary>
	/// 初期化された際に呼び出されます。
	/// </summary>
	/// <returns>非同期操作を返します。</returns>
	protected override async Task OnInitializedAsync()
	{
		_itemRecipe = await ItemRecipeQueryService.QuerySingleAsync(ItemRecipeId);
	}

	#endregion
}
